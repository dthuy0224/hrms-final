<!DOCTYPE html>
<html>
    <head>
        <%- include('../partials/header') %>
        <link rel="stylesheet" href="/stylesheets/leave-form.css" />
        <link
        rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
      />
     
    </head>
    <body>
        <nav class="navbar navbar-default no-margin">
            <!-- Brand and toggle get grouped for better mobile display -->

            <div class="navbar-header fixed-brand">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" id="menu-toggle">
                    <span class="glyphicon glyphicon-th-large" style="margin-left:5px;" aria-hidden="true"></span>
                </button>
                <a class="navbar-brand" href="#">
                    <%= userName %>
                </a>
            </div><!-- navbar-header-->

            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
                    <li class="active">
                        <button class="navbar-toggle collapse in" data-toggle="collapse" id="menu-toggle-2"><span
                                class="glyphicon glyphicon-th-large" aria-hidden="true"></span></button>
                    </li>
                    <li class="navbar-brand">
                        <form action="/logout" method="get">
                            <button id="logout" type="submit" style="margin-top: -3px;" class="btn btn-default"><i
                                    class="fa fa-sign-out" aria-hidden="true"></i> Logout
                            </button>
                        </form>
                    </li>
                </ul>
            </div><!-- bs-example-navbar-collapse-1 -->
        </nav>
        <div id="wrapper">
            <!-- Include the sidebar partial with path parameter -->
            <% 
            // Define path if not defined
            var currentPath = typeof path !== 'undefined' ? path : '/manager/apply-for-leave';
            %>
            <%- include('../partials/sidebar', {path: currentPath}) %><!-- /#sidebar-wrapper --><!-- /#sidebar-wrapper -->
        <!-- Page Content -->
           <!-- Page Content -->
           <div id="page-content-wrapper">
            <div class="container-fluid xyz">
                <div class="row">
                    <div class="col-lg-12">
                      <h1 class="page-header"><i class="fas fa-chevron-right"></i>Application Details</h1>
                        <div class="container" id="menu1" style="overflow: auto;">
                          <form action="/manager/apply-for-leave" method="post" id="formApply" style="display: flex; flex-wrap: wrap; gap: 30px;">
                            <div class="form-row">
                             <div class="leave-form">
              <label>Title<i class="fa-solid fa-star-of-life fa-2xs" style="color: #ed0000; font-size: 6px; vertical-align: super;"></i>:</label>
              <input type="text" name="title" id="title" placeholder="e.g. Personal matters, health issue..." required />
                            
        <span class="error-message" id="title-error"></span>

        <label>Start Date<i class="fa-solid fa-star-of-life fa-2xs" style="color: #ed0000; font-size: 6px; vertical-align: super;"></i>:</label>
        <input type="date" name="start_date" id="start_date" required min="<%= new Date().toISOString().split('T')[0] %>" />
        <span class="error-message" id="start_date-error"></span>

        <label>End Date<i class="fa-solid fa-star-of-life fa-2xs" style="color: #ed0000; font-size: 6px; vertical-align: super;"></i>:</label>
        <input type="date" name="end_date" id="end_date" required min="<%= new Date().toISOString().split('T')[0] %>" />
        <span class="error-message" id="end_date-error"></span>

        <label>Period of Leave (days):</label>
        <input type="text" id="period_display" disabled placeholder="Calculated automatically" />
        <input type="hidden" name="period" id="period" />
        <span class="error-message" id="period-error"></span>

        <label>Leave Period Type<i class="fa-solid fa-star-of-life fa-2xs" style="color: #ed0000; font-size: 6px; vertical-align: super;"></i>:</label>
          <select name="leaveType" id="leaveType">
            <option value="full">Full Day</option>
            <option value="half-morning">Half Day - Morning</option>
            <option value="half-afternoon">Half Day - Afternoon</option>
         </select>
         <span class="error-message" id="leaveType-error"></span>
        </div>
                   
        <div class="leave-form" >
                          <label>Type of Leave<i class="fa-solid fa-star-of-life fa-2xs" style="color: #ed0000; font-size: 6px; vertical-align: super;"></i>:</label>
        <select name="type" id="type" required>
          <option value="">-- Select Leave Type --</option>
          <option value="Annual Leave">Annual Leave</option> 
          <option value="Sick Leave">Sick Leave</option>
          <option value="Maternity Leave">Maternity Leave</option>
          <option value="Emergency Leave">Emergency Leave</option>
	<option value="Onboard">Onboard</option>
          <option value="Other">Other</option>
        </select>
        <span class="error-message" id="type-error"></span>

        <label>Reason<i class="fa-solid fa-star-of-life fa-2xs" style="color: #ed0000; font-size: 6px; vertical-align: super;"></i>:</label>
        <textarea name="reason" id="reason" required></textarea>
        <span class="error-message" id="reason-error"></span>

        <label>Delegate to<i class="fa-solid fa-star-of-life fa-2xs" style="color: #ed0000; font-size: 6px; vertical-align: super;"></i>:</label>
        <select name="delegateTo" id="delegateTo" required>
          <% coworkers.forEach(function(user) { %>
            <option value="<%= user._id %>"><%= user.name %></option>
          <% }); %>
        </select>
        <span class="error-message" id="delegateTo-error"></span>

        <label>Delegate Content<i class="fa-solid fa-star-of-life fa-2xs" style="color: #ed0000; font-size: 6px; vertical-align: super;"></i>:</label>
        <textarea name="delegateContent" id="delegateContent" required placeholder="Explain what tasks you're delegating..."></textarea>
        <span class="error-message" id="delegateContent-error"></span>
                            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
      
                        </div>
                       
        </div>
         <div class="form-buttons">
                          <button type="submit" class="btn-apply" data-toggle="modal" data-target="#myModal1">Save</button>
                          <button type="button" id="cancelButton" class="btn btn-default">Cancel</button>
                        </div>
                        <div id="loadingSpinner" style="display:none;text-align:center">
                          <i class="fas fa-spinner fa-spin fa-2x"></i> Saving Leave...
                        </div>
                        
                      </form>


                    </div>
                   
                </div>
            </div>
        </div>
    </div>
    <!-- /#page-content-wrapper -->

</div>
</div>
<div id="successModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Success</h4>
            </div>
            <div class="modal-body">
                <p>Your leave application has been successfully submitted!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- /#wrapper -->
<!-- jQuery -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.js" charset="UTF-8"></script>
<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.js" charset="UTF-8"></script>
<script>

  // Các biến ngày hôm nay
  const today = new Date();
const todayStr = today.toISOString().split('T')[0]; 
const selectedDate = document.getElementById('start_date').value; 
  
  // Lấy các phần tử HTML
  const title = document.getElementById("title");
const type = document.getElementById("type");
const reason = document.getElementById("reason");
const delegateTo = document.getElementById("delegateTo");
const delegateContent = document.getElementById("delegateContent");
  const startDate = document.getElementById("start_date");
  const endDate = document.getElementById("end_date");
  const leaveType = document.getElementById("leaveType");
  const form = document.getElementById("formApply");
  const periodDisplay = document.getElementById("period_display");
  const periodHidden = document.getElementById("period");
  
  // Thiết lập ngày tối thiểu cho start và end date
  startDate.min = todayStr;
  endDate.min = todayStr;
  
  // Danh sách các trường cần kiểm tra
  const fields = ["title", "start_date", "end_date", "leaveType", "type", "reason", "delegateTo", "delegateContent"];
  
  // Hàm hiển thị lỗi
  // Hàm hiển thị lỗi
const showError = (id, msg) => {
    const element = document.getElementById(id);
    const errorElement = document.getElementById(id + "-error");
    
    if (element && errorElement) {
        element.classList.add("invalid");
        errorElement.textContent = msg;
        errorElement.style.display = "block";
    }
};

// Hàm xóa lỗi
const clearError = (id) => {
    const element = document.getElementById(id);
    const errorElement = document.getElementById(id + "-error");
    
    if (element && errorElement) {
        element.classList.remove("invalid");
        errorElement.textContent = "";
    }
};

// Tự động validate khi ngày thay đổi
startDate.addEventListener("change", function() {
    validators.start_date();
    if (endDate.value) validators.end_date(); // Validate lại end_date nếu có giá trị
});

endDate.addEventListener("change", function() {
    validators.end_date();
});
  
  // Các hàm kiểm tra từng trường
  const validators = {
title: () => {
    const val = title.value.trim();
    if (!val) {
        showError("title", "Please enter the leave request title.");
        return false;
    }
    if (val.length > 100) {
        showError("title", "The title must not exceed 100 characters.");
        return false;
    }
    clearError("title");
    return true;
},

start_date: () => {
    const startVal = startDate.value;
    if (!startVal) {
        showError("start_date", "Please select a start date.");
        return false;
    }
    
    const start = new Date(startVal);
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    
    if (isNaN(start.getTime())) {
        showError("start_date", "Invalid date.");
        return false;
    }
    
    if (start < today) {
        showError("start_date", "Start date must not be before today (" + today.toLocaleDateString() + ").");
        return false;
    }

    clearError("start_date");
    endDate.min = startVal;
    return true;
},

end_date: () => {
    const startVal = startDate.value;
    const endVal = endDate.value;
    
    if (!endVal) {
        showError("end_date", "Please select an end date.");
        return false;
    }

    const start = new Date(startVal);
    const end = new Date(endVal);
    const today = new Date();
    today.setHours(0, 0, 0, 0);

    if (isNaN(end.getTime())) {
        showError("end_date", "Invalid date.");
        return false;
    }

    if (end < today) {
        showError("end_date", "End date must not be before today (" + today.toLocaleDateString() + ").");
        return false;
    }

    if (end < start) {
        showError("end_date", "End date must not be before start date (" + start.toLocaleDateString() + ").");
        return false;
    }

    const timeDiff = end - start;
    const periodDays = Math.floor(timeDiff / (1000 * 60 * 60 * 24)) + 1;

    periodDisplay.value = periodDays;
    periodHidden.value = periodDays;

    clearError("end_date");
    return true;
},

leaveType: () => {
    if (!leaveType.value || leaveType.value === "-- Select Leave Period Type --") {
        showError("leaveType", "Please select a leave period type.");
        return false;
    }
    clearError("leaveType");
    return true;
},

type: () => {
    if (!type.value || type.value === "-- Select Leave Type --") {
        showError("type", "Please select a leave type.");
        return false;
    }
    clearError("type");
    return true;
},

reason: () => {
    const val = reason.value.trim();
    if (!val) {
        showError("reason", "Please provide a reason for your leave.");
        return false;
    }
    if (val.length > 4000) {
        showError("reason", "The reason must not exceed 4000 characters.");
        return false;
    }
    clearError("reason");
    return true;
},

delegateTo: () => {
    if (!delegateTo.value) {
        showError("delegateTo", "Please select a delegate.");
        return false;
    }
    clearError("delegateTo");
    return true;
},

delegateContent: () => {
    const val = delegateContent.value.trim();
    if (!val) {
        showError("delegateContent", "Please describe the delegated work.");
        return false;
    }
    if (val.length > 4000) {
        showError("delegateContent", "The content must not exceed 4000 characters.");
        return false;
    }
    clearError("delegateContent");
    return true;
}
};

// Field focus validation
fields.forEach((field, currentIndex) => {
    const element = document.getElementById(field);
    element.addEventListener("focus", () => {
        for (let i = 0; i < currentIndex; i++) {
            const prevFieldId = fields[i];
            const prevElement = document.getElementById(prevFieldId);
            const errorSpan = document.getElementById(prevFieldId + "-error");

            if (prevElement && errorSpan) {
                // Kiểm tra cho các trường ngày riêng biệt
                let val = prevElement.value.trim();
                if (prevElement.type === 'date' && val === "") {
                    val = null; // Không có ngày chọn
                }

                if (!val) {
                    errorSpan.textContent = "Please fill out this field.";
                    prevElement.classList.add("error-border");
                } else {
                    errorSpan.textContent = "";
                    prevElement.classList.remove("error-border");
                }
            }
        }
    });
});


// CSS for error borders
const style = document.createElement('style');
style.innerHTML = `
.error-border {
    border: 1px solid red !important;
}
`;
document.head.appendChild(style);

// Validate dates on change/input
startDate.addEventListener('input', validateDates);
endDate.addEventListener('input', validateDates);
startDate.addEventListener('change', validateDates);
endDate.addEventListener('change', validateDates);

function validateDates() {
    const startVal = startDate.value;
    const endVal = endDate.value;
    const today = new Date();
    today.setHours(0, 0, 0, 0);

    clearError('start_date');
    clearError('end_date');

    if (!startVal) return;

    const start = new Date(startVal);

    if (start < today) {
        showError('start_date', `Start date must be from ${today.toLocaleDateString()} onward.`);
        return;
    }

    if (!endVal) return;

    const end = new Date(endVal);

    if (end < today) {
        showError('end_date', `End date must be from ${today.toLocaleDateString()} onward.`);
        return;
    }

    if (end < start) {
        showError('end_date', `End date must be on or after the start date (${start.toLocaleDateString()}).`);
        return;
    }

    const timeDiff = end - start;
    const periodDays = Math.floor(timeDiff / (1000 * 60 * 60 * 24)) + 1;
    periodDisplay.value = periodDays;
    periodHidden.value = periodDays;
}

const updateLeaveForm = () => {
    const start = new Date(startDate.value);
    const end = new Date(endDate.value);
    const isHalfDay = leaveType.value.startsWith('half');

    if (isHalfDay) {
        endDate.value = startDate.value;
        endDate.disabled = true;
        periodDisplay.value = 0.5;
        periodHidden.value = 0.5;
    } else {
        endDate.disabled = false;
        if (!isNaN(start) && !isNaN(end)) {
            const days = Math.floor((end - start) / (1000 * 60 * 60 * 24)) + 1;
            periodDisplay.value = days;
            periodHidden.value = days;
        }
    }
};

leaveType.addEventListener("change", updateLeaveForm);
startDate.addEventListener("change", updateLeaveForm);
endDate.addEventListener("change", updateLeaveForm);

form.addEventListener("submit", (e) => {
    const start = new Date(startDate.value);
    const end = new Date(endDate.value);
    const isHalfDay = leaveType.value.startsWith('half');

    if (isNaN(start)) {
        alert("Invalid start date.");
        e.preventDefault();
        return;
    }

    if (!isHalfDay && isNaN(end)) {
        alert("Invalid end date.");
        e.preventDefault();
        return;
    }

    const today = new Date();
    today.setHours(0, 0, 0, 0);
    const diffDays = Math.floor((start - today) / (1000 * 60 * 60 * 24));
    const period = parseFloat(periodHidden.value);

    if (period === 1 && diffDays < 2) {
        alert("One-day leave must be requested at least 2 days in advance.");
        e.preventDefault();
        return;
    }

    if (period > 1 && diffDays < 7) {
        alert("Multiple-day leave must be requested at least 7 days in advance.");
        e.preventDefault();
        return;
    }
});
  </script>
  
  <!-- Script đánh dấu menu -->
  <script>
  document.addEventListener('DOMContentLoaded', function () {
    const path = window.location.pathname;
    const menuLinks = document.querySelectorAll('#menu li a');
  
    menuLinks.forEach(link => {
      const li = link.parentElement;
      if (link.getAttribute('href') === path) {
        li.classList.add('active');
      } else {
        li.classList.remove('active');
      }
    });
  });
document.getElementById("cancelButton").addEventListener("click", function (e) {
    e.preventDefault();
 if (confirm("Are you sure you want to clear the form? All entered data will be lost.")) {
        window.location.href = window.location.href; 
    }
    
});
  </script>

  <script>
// Khi form được gửi thành công, hiển thị modal thông báo thành công
form.addEventListener("submit", function(event) {
    event.preventDefault();
    $.ajax({
        type: "POST",
        url: "/manager/apply-for-leave", 
        data: $(form).serialize(), 
        success: function(response) {
            $('#successModal').modal('show');
            form.reset();
        },
        error: function(error) {
            console.log('Error:', error);
        }
    });
});

</script>
    
    </body>

      
    <!-- Include modal templates -->
    <%- include('../partials/modals') %>

</html>