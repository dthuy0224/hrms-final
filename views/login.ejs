<!DOCTYPE html>
<html>

<head>
  <title>
    <%= title %>
  </title>
  <link rel="stylesheet" href="/stylesheets/normalize.css" />
  <link rel="stylesheet" href="/stylesheets/login.css" />
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
  <style>
    .error-message {
      background-color: #ffebee;
      border-left: 4px solid #f44336;
      padding: 12px;
      margin-bottom: 20px;
      border-radius: 4px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .error-message p {
      color: #d32f2f;
      margin: 0;
      font-weight: 500;
    }
    
    .success-message {
      background-color: #e8f5e9;
      border-left: 4px solid #4caf50;
      padding: 12px;
      margin-bottom: 20px;
      border-radius: 4px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .success-message p {
      color: #2e7d32;
      margin: 0;
      font-weight: 500;
    }
  </style>
</head>

<body>
  <div class="login-container">
    <div class="login-form">
      <h1>Login</h1>
      <% if(hasErrors) { %>
        <div class="error-message">
          <% messages.forEach(function(item) { %>
            <p id="message">
              <%= item %>
            </p>
            <% }) %>
        </div>
      <% } %>
      
      <% if(typeof hasSuccess !== 'undefined' && hasSuccess) { %>
        <div class="success-message">
          <% successMsg.forEach(function(item) { %>
            <p id="success-message">
              <%= item %>
            </p>
            <% }) %>
        </div>
      <% } %>
      
      <form action="/login" method="post" id="loginForm">
        <div class="form-group">
          <label for="officeEmail">Office Email:</label>
          <input type="email" id="officeEmail" name="officeEmail" placeholder="Enter Office Email Address" required="required" 
                 pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$" 
                 title="Please enter a valid office email address" />
          <div class="email-error" style="display: none; color: #d9534f; font-size: 12px; margin-top: 5px;">
            Invalid office email format!
          </div>
        </div>
        <div class="form-group">
          <label for="password">Password:</label>
          <input type="password" id="password" name="password" placeholder="Enter Password" required="required" />
        </div>
        <div class="forgot-password">
          <a href="/forgot-password">Forgot your password?</a>
        </div>
        <input type="hidden" name="_csrf" value="<%=csrfToken%>" />
        <button type="submit" id="login" class="btn-login">
          Log in
        </button>
        <div class="help-center">
          <span>Contact to <a href="mailto:admin@example.com" class="help-link">Admin</a> if you have any questions?</span>
        </div>
      </form>
    </div>
  </div>

      <script>
        document.addEventListener('DOMContentLoaded', function() {
          const officeEmailInput = document.getElementById('officeEmail');
          const emailError = document.querySelector('.email-error');
          const loginForm = document.getElementById('loginForm');
          
          // Validate office email on input
          officeEmailInput.addEventListener('input', function() {
            const isValid = validateEmail(this.value);
            if (!isValid && this.value) {
              emailError.style.display = 'block';
            } else {
              emailError.style.display = 'none';
            }
          });
          
          // Validate on form submit
          loginForm.addEventListener('submit', function(event) {
            if (!validateEmail(officeEmailInput.value)) {
              event.preventDefault();
              emailError.style.display = 'block';
              officeEmailInput.focus();
            }
          });
          
          // Office email validation function
          function validateEmail(email) {
            const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            return re.test(String(email).toLowerCase());
          }
        });
      </script>
      
      <script>
        // Script để kiểm tra và hiển thị thông báo lỗi từ URL
        document.addEventListener('DOMContentLoaded', function() {
          console.log('Page loaded, checking for errors...');
          
          // Lấy thông báo lỗi từ URL parameter
          const urlParams = new URLSearchParams(window.location.search);
          const errorMessage = urlParams.get('errorMessage');
          
          if (errorMessage) {
            const decodedMessage = decodeURIComponent(errorMessage);
            console.log('Error message from URL:', decodedMessage);
            
            // Tạo phần tử thông báo lỗi
            const newErrorDiv = document.createElement('div');
            newErrorDiv.className = 'error-message';
            
            // Kiểm tra nếu là thông báo về tài khoản bị khóa
            if (decodedMessage.includes('temporarily locked') || decodedMessage.includes('more than 5 times')) {
              // Tạo icon cảnh báo
              const icon = document.createElement('span');
              icon.innerHTML = '&#x26A0;'; // Unicode cho biểu tượng cảnh báo
              icon.style.marginRight = '8px';
              icon.style.fontSize = '20px';
              
              // Tạo nội dung thông báo
              const errorP = document.createElement('p');
              errorP.id = 'message';
              errorP.style.fontWeight = 'bold';
              errorP.style.color = '#d32f2f';
              errorP.appendChild(icon);
              errorP.appendChild(document.createTextNode(decodedMessage));
              
              newErrorDiv.appendChild(errorP);
            } else {
              // Thông báo lỗi thông thường
              const errorP = document.createElement('p');
              errorP.id = 'message';
              errorP.textContent = decodedMessage;
              
              newErrorDiv.appendChild(errorP);
            }
            
            // Chèn vào sau tiêu đề
            const loginTitle = document.querySelector('.login-form h1');
            loginTitle.insertAdjacentElement('afterend', newErrorDiv);
            
            // Xóa tham số khỏi URL để tránh hiển thị thông báo khi refresh trang
            const url = new URL(window.location);
            url.searchParams.delete('errorMessage');
            window.history.replaceState({}, '', url);
            
            console.log('Error message displayed');
          }
        });
      </script>
</body>
<script src="/javascripts/prefixfree.min.js"></script>

</html>
